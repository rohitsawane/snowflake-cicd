name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/prod/**'
      - 'config/prod.yml'
  workflow_dispatch:
    inputs:
      skip_quality_checks:
        description: 'Skip data quality checks'
        required: false
        default: 'false'
        type: boolean

jobs:
  pre-deployment-checks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Validate Scripts
      run: |
        # Check if all required files exist
        find scripts/prod -name "*.sql" -exec echo "Validating: {}" \;
        
  deploy-prod:
    needs: pre-deployment-checks
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install snowflake-connector-python pyyaml
    
    - name: Backup Current Prod (if exists)
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: |
        python scripts/utils/backup.py --environment prod
    
    - name: Deploy to Production
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: |
        python scripts/utils/deploy.py --environment prod
    
    - name: Run Post-Deployment Validation
      if: ${{ github.event.inputs.skip_quality_checks != 'true' }}
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: |
        python scripts/utils/data_quality_validator.py --environment prod
        
    - name: Notify on Success
      if: success()
      run: echo "Production deployment completed successfully!"
      
    - name: Rollback on Failure
      if: failure()
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: |
        python scripts/utils/rollback.py --environment prod
