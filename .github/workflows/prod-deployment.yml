name: Deploy to Production

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/prod/**'
      - 'config/prod.yml'
  # Optional: Add manual trigger
  workflow_dispatch:
    inputs:
      skip_validation:
        description: 'Skip post-deployment validation'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  pre-deployment-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate Required Files
      run: |
        echo ":mag: Checking repository structure..."

        # Check if config file exists
        if [ -f "config/prod.yml" ]; then
          echo ":white_check_mark: Production config file found"
        else
          echo ":x: config/prod.yml not found"
          exit 1
        fi

        # Check if deployment script exists
        if [ -f "scripts/utils/deploy.py" ]; then
          echo ":white_check_mark: Deployment script found"
        else
          echo ":x: scripts/utils/deploy.py not found"
          exit 1
        fi

        # Check if SQL scripts exist
        if [ -d "scripts/prod" ]; then
          sql_count=$(find scripts/prod -name "*.sql" | wc -l)
          if [ $sql_count -gt 0 ]; then
            echo ":white_check_mark: Found $sql_count SQL script(s) for deployment"
            find scripts/prod -name "*.sql" -exec echo "  - {}" \;
          else
            echo ":warning:  No SQL scripts found in scripts/prod/ directory"
          fi
        else
          echo ":warning:  scripts/prod/ directory not found"
        fi

  deploy-prod:
    needs: pre-deployment-checks
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install snowflake-connector-python pyyaml

    - name: Deploy to Production
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: |
        echo ":rocket: Starting production deployment..."
        python scripts/utils/deploy.py --environment prod

    - name: Run Basic Validation
      if: ${{ github.event.inputs.skip_validation != 'true' }}
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      run: |
        echo ":mag: Running basic post-deployment validation..."
        python scripts/utils/basic_validator.py --environment prod

    - name: Deployment Summary
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo ":white_check_mark: Production deployment completed successfully!"
          echo ":bar_chart: Deployment Summary:"
          echo "  - Environment: Production"
          echo "  - Branch: ${{ github.ref_name }}"
          echo "  - Commit: ${{ github.sha }}"
          echo "  - Triggered by: ${{ github.actor }}"
        else
          echo ":x: Production deployment failed!"
          echo "Please check the logs above for details."
        fi